/*
 * generated by Xtext 2.10.0
 */
package fr.paris10.miage.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import fr.paris10.miage.dslLogs.Utilisateur

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class DslLogsGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))
		fsa.generateFile("index.html", genererHTML("Logs", genererIndex(resource)))
	}
	
	//Template de nos pages html
	def genererHTML(String titre, String contents) '''
	<HTML>
	<HEAD>
	<script type="text/javascript" src=jquery.js"></script>
	<script type="text/javascript" src=jquery_plantuml.js"></script>
	<TITLE>«titre»</TITLE>
	</HEAD>
	<BODY>
	«contents»
	</BODY>
	</HTML>
	'''
	
	def genererIndex(Resource resource) {
		return ''' <ul>
		«resource.allContents
			.filter(typeof(Utilisateur))
			.map[name].toSet //sinon on recupere plusieurs fois nos utilisateurs
			.map[genererListe]
			.join('\n')
		»
		</ul>
		'''
	}
	
	def templateImage() {
		return '''
		<img uml="@startuml
		skinparam sequence {
			ArrowColor Black
			ActorBorderColor Black
		}
		'''
	}
	
	def genererListe(String name) {
		return '''<li><a href="«name».html">«name»</a></li> '''
	}
}
