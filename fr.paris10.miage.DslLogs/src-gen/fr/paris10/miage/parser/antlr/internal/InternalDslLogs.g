/*
 * generated by Xtext 2.10.0
 */
grammar InternalDslLogs;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.paris10.miage.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.paris10.miage.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.paris10.miage.services.DslLogsGrammarAccess;

}

@parser::members {

 	private DslLogsGrammarAccess grammarAccess;

    public InternalDslLogsParser(TokenStream input, DslLogsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected DslLogsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getLogsLogParserRuleCall_0());
			}
			lv_logs_0_0=ruleLog
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"logs",
					lv_logs_0_0,
					"fr.paris10.miage.DslLogs.Log");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleLog
entryRuleLog returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogRule()); }
	iv_ruleLog=ruleLog
	{ $current=$iv_ruleLog.current; }
	EOF;

// Rule Log
ruleLog returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='\u00E0'
		{
			newLeafNode(otherlv_0, grammarAccess.getLogAccess().getLatinSmallLetterAWithGraveKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogAccess().getDateDateParserRuleCall_1_0());
				}
				lv_date_1_0=ruleDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogRule());
					}
					set(
						$current,
						"date",
						lv_date_1_0,
						"fr.paris10.miage.DslLogs.Date");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='utilisateur'
		{
			newLeafNode(otherlv_2, grammarAccess.getLogAccess().getUtilisateurKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogAccess().getUtilisateurUtilisateurParserRuleCall_3_0());
				}
				lv_utilisateur_3_0=ruleUtilisateur
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogRule());
					}
					set(
						$current,
						"utilisateur",
						lv_utilisateur_3_0,
						"fr.paris10.miage.DslLogs.Utilisateur");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLogAccess().getActionActionParserRuleCall_4_0());
				}
				lv_action_4_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogRule());
					}
					set(
						$current,
						"action",
						lv_action_4_0,
						"fr.paris10.miage.DslLogs.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLogAccess().getParametreParametreParserRuleCall_5_0());
				}
				lv_parametre_5_0=ruleParametre
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogRule());
					}
					set(
						$current,
						"parametre",
						lv_parametre_5_0,
						"fr.paris10.miage.DslLogs.Parametre");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6='r\u00E9ponse'
		{
			newLeafNode(otherlv_6, grammarAccess.getLogAccess().getRPonseKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogAccess().getReponseReponseEnumRuleCall_7_0());
				}
				lv_reponse_7_0=ruleReponse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogRule());
					}
					set(
						$current,
						"reponse",
						lv_reponse_7_0,
						"fr.paris10.miage.DslLogs.Reponse");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDate
entryRuleDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	iv_ruleDate=ruleDate
	{ $current=$iv_ruleDate.current; }
	EOF;

// Rule Date
ruleDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_annee_0_0=RULE_INT
				{
					newLeafNode(lv_annee_0_0, grammarAccess.getDateAccess().getAnneeINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"annee",
						lv_annee_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_1='/'
		{
			newLeafNode(otherlv_1, grammarAccess.getDateAccess().getSolidusKeyword_1());
		}
		(
			(
				lv_mois_2_0=RULE_INT
				{
					newLeafNode(lv_mois_2_0, grammarAccess.getDateAccess().getMoisINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"mois",
						lv_mois_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3='/'
		{
			newLeafNode(otherlv_3, grammarAccess.getDateAccess().getSolidusKeyword_3());
		}
		(
			(
				lv_jour_4_0=RULE_INT
				{
					newLeafNode(lv_jour_4_0, grammarAccess.getDateAccess().getJourINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"jour",
						lv_jour_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='-'
		{
			newLeafNode(otherlv_5, grammarAccess.getDateAccess().getHyphenMinusKeyword_5());
		}
		(
			(
				lv_heure_6_0=RULE_INT
				{
					newLeafNode(lv_heure_6_0, grammarAccess.getDateAccess().getHeureINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"heure",
						lv_heure_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getDateAccess().getColonKeyword_7());
		}
		(
			(
				lv_minute_8_0=RULE_INT
				{
					newLeafNode(lv_minute_8_0, grammarAccess.getDateAccess().getMinuteINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"minute",
						lv_minute_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9=':'
		{
			newLeafNode(otherlv_9, grammarAccess.getDateAccess().getColonKeyword_9());
		}
		(
			(
				lv_seconde_10_0=RULE_INT
				{
					newLeafNode(lv_seconde_10_0, grammarAccess.getDateAccess().getSecondeINTTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDateRule());
					}
					setWithLastConsumed(
						$current,
						"seconde",
						lv_seconde_10_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleParametre
entryRuleParametre returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametreRule()); }
	iv_ruleParametre=ruleParametre
	{ $current=$iv_ruleParametre.current; }
	EOF;

// Rule Parametre
ruleParametre returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParametreAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParametreRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getParametreAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getParametreAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParametreRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleUtilisateur
entryRuleUtilisateur returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUtilisateurRule()); }
	iv_ruleUtilisateur=ruleUtilisateur
	{ $current=$iv_ruleUtilisateur.current; }
	EOF;

// Rule Utilisateur
ruleUtilisateur returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getUtilisateurAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getUtilisateurRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getDemandeParserRuleCall_0());
		}
		this_Demande_0=ruleDemande
		{
			$current = $this_Demande_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getAppelParserRuleCall_1());
		}
		this_Appel_1=ruleAppel
		{
			$current = $this_Appel_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDemande
entryRuleDemande returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDemandeRule()); }
	iv_ruleDemande=ruleDemande
	{ $current=$iv_ruleDemande.current; }
	EOF;

// Rule Demande
ruleDemande returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='demande'
		{
			newLeafNode(otherlv_0, grammarAccess.getDemandeAccess().getDemandeKeyword_0());
		}
		(
			(
				lv_page_1_0=RULE_STRING
				{
					newLeafNode(lv_page_1_0, grammarAccess.getDemandeAccess().getPageSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDemandeRule());
					}
					setWithLastConsumed(
						$current,
						"page",
						lv_page_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAppel
entryRuleAppel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAppelRule()); }
	iv_ruleAppel=ruleAppel
	{ $current=$iv_ruleAppel.current; }
	EOF;

// Rule Appel
ruleAppel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='appelle'
		{
			newLeafNode(otherlv_0, grammarAccess.getAppelAccess().getAppelleKeyword_0());
		}
		(
			(
				lv_page_1_0=RULE_STRING
				{
					newLeafNode(lv_page_1_0, grammarAccess.getAppelAccess().getPageSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAppelRule());
					}
					setWithLastConsumed(
						$current,
						"page",
						lv_page_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_2='param\u00E8tres'
			{
				newLeafNode(otherlv_2, grammarAccess.getAppelAccess().getParamTresKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAppelAccess().getParametresParametreParserRuleCall_2_1_0());
					}
					lv_parametres_3_0=ruleParametre
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAppelRule());
						}
						add(
							$current,
							"parametres",
							lv_parametres_3_0,
							"fr.paris10.miage.DslLogs.Parametre");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4='et'
				{
					newLeafNode(otherlv_4, grammarAccess.getAppelAccess().getEtKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAppelAccess().getParametresParametreParserRuleCall_2_2_1_0());
						}
						lv_parametres_5_0=ruleParametre
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAppelRule());
							}
							add(
								$current,
								"parametres",
								lv_parametres_5_0,
								"fr.paris10.miage.DslLogs.Parametre");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Rule Reponse
ruleReponse returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='OK'
			{
				$current = grammarAccess.getReponseAccess().getOKEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getReponseAccess().getOKEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='KO'
			{
				$current = grammarAccess.getReponseAccess().getERROREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getReponseAccess().getERROREnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
