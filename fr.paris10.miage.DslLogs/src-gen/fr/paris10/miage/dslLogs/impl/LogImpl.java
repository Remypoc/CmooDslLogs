/**
 * generated by Xtext 2.10.0
 */
package fr.paris10.miage.dslLogs.impl;

import fr.paris10.miage.dslLogs.Action;
import fr.paris10.miage.dslLogs.Date;
import fr.paris10.miage.dslLogs.DslLogsPackage;
import fr.paris10.miage.dslLogs.Log;
import fr.paris10.miage.dslLogs.Parametre;
import fr.paris10.miage.dslLogs.Reponse;
import fr.paris10.miage.dslLogs.Utilisateur;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Log</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.paris10.miage.dslLogs.impl.LogImpl#getDate <em>Date</em>}</li>
 *   <li>{@link fr.paris10.miage.dslLogs.impl.LogImpl#getUtilisateur <em>Utilisateur</em>}</li>
 *   <li>{@link fr.paris10.miage.dslLogs.impl.LogImpl#getAction <em>Action</em>}</li>
 *   <li>{@link fr.paris10.miage.dslLogs.impl.LogImpl#getParametre <em>Parametre</em>}</li>
 *   <li>{@link fr.paris10.miage.dslLogs.impl.LogImpl#getReponse <em>Reponse</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LogImpl extends MinimalEObjectImpl.Container implements Log
{
  /**
   * The cached value of the '{@link #getDate() <em>Date</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDate()
   * @generated
   * @ordered
   */
  protected Date date;

  /**
   * The cached value of the '{@link #getUtilisateur() <em>Utilisateur</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUtilisateur()
   * @generated
   * @ordered
   */
  protected Utilisateur utilisateur;

  /**
   * The cached value of the '{@link #getAction() <em>Action</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAction()
   * @generated
   * @ordered
   */
  protected Action action;

  /**
   * The cached value of the '{@link #getParametre() <em>Parametre</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParametre()
   * @generated
   * @ordered
   */
  protected Parametre parametre;

  /**
   * The default value of the '{@link #getReponse() <em>Reponse</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReponse()
   * @generated
   * @ordered
   */
  protected static final Reponse REPONSE_EDEFAULT = Reponse.OK;

  /**
   * The cached value of the '{@link #getReponse() <em>Reponse</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReponse()
   * @generated
   * @ordered
   */
  protected Reponse reponse = REPONSE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LogImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslLogsPackage.Literals.LOG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Date getDate()
  {
    return date;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDate(Date newDate, NotificationChain msgs)
  {
    Date oldDate = date;
    date = newDate;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslLogsPackage.LOG__DATE, oldDate, newDate);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDate(Date newDate)
  {
    if (newDate != date)
    {
      NotificationChain msgs = null;
      if (date != null)
        msgs = ((InternalEObject)date).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslLogsPackage.LOG__DATE, null, msgs);
      if (newDate != null)
        msgs = ((InternalEObject)newDate).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslLogsPackage.LOG__DATE, null, msgs);
      msgs = basicSetDate(newDate, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslLogsPackage.LOG__DATE, newDate, newDate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Utilisateur getUtilisateur()
  {
    return utilisateur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUtilisateur(Utilisateur newUtilisateur, NotificationChain msgs)
  {
    Utilisateur oldUtilisateur = utilisateur;
    utilisateur = newUtilisateur;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslLogsPackage.LOG__UTILISATEUR, oldUtilisateur, newUtilisateur);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUtilisateur(Utilisateur newUtilisateur)
  {
    if (newUtilisateur != utilisateur)
    {
      NotificationChain msgs = null;
      if (utilisateur != null)
        msgs = ((InternalEObject)utilisateur).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslLogsPackage.LOG__UTILISATEUR, null, msgs);
      if (newUtilisateur != null)
        msgs = ((InternalEObject)newUtilisateur).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslLogsPackage.LOG__UTILISATEUR, null, msgs);
      msgs = basicSetUtilisateur(newUtilisateur, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslLogsPackage.LOG__UTILISATEUR, newUtilisateur, newUtilisateur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Action getAction()
  {
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAction(Action newAction, NotificationChain msgs)
  {
    Action oldAction = action;
    action = newAction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslLogsPackage.LOG__ACTION, oldAction, newAction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAction(Action newAction)
  {
    if (newAction != action)
    {
      NotificationChain msgs = null;
      if (action != null)
        msgs = ((InternalEObject)action).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslLogsPackage.LOG__ACTION, null, msgs);
      if (newAction != null)
        msgs = ((InternalEObject)newAction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslLogsPackage.LOG__ACTION, null, msgs);
      msgs = basicSetAction(newAction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslLogsPackage.LOG__ACTION, newAction, newAction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Parametre getParametre()
  {
    return parametre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParametre(Parametre newParametre, NotificationChain msgs)
  {
    Parametre oldParametre = parametre;
    parametre = newParametre;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslLogsPackage.LOG__PARAMETRE, oldParametre, newParametre);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParametre(Parametre newParametre)
  {
    if (newParametre != parametre)
    {
      NotificationChain msgs = null;
      if (parametre != null)
        msgs = ((InternalEObject)parametre).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslLogsPackage.LOG__PARAMETRE, null, msgs);
      if (newParametre != null)
        msgs = ((InternalEObject)newParametre).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslLogsPackage.LOG__PARAMETRE, null, msgs);
      msgs = basicSetParametre(newParametre, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslLogsPackage.LOG__PARAMETRE, newParametre, newParametre));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Reponse getReponse()
  {
    return reponse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReponse(Reponse newReponse)
  {
    Reponse oldReponse = reponse;
    reponse = newReponse == null ? REPONSE_EDEFAULT : newReponse;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslLogsPackage.LOG__REPONSE, oldReponse, reponse));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslLogsPackage.LOG__DATE:
        return basicSetDate(null, msgs);
      case DslLogsPackage.LOG__UTILISATEUR:
        return basicSetUtilisateur(null, msgs);
      case DslLogsPackage.LOG__ACTION:
        return basicSetAction(null, msgs);
      case DslLogsPackage.LOG__PARAMETRE:
        return basicSetParametre(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslLogsPackage.LOG__DATE:
        return getDate();
      case DslLogsPackage.LOG__UTILISATEUR:
        return getUtilisateur();
      case DslLogsPackage.LOG__ACTION:
        return getAction();
      case DslLogsPackage.LOG__PARAMETRE:
        return getParametre();
      case DslLogsPackage.LOG__REPONSE:
        return getReponse();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslLogsPackage.LOG__DATE:
        setDate((Date)newValue);
        return;
      case DslLogsPackage.LOG__UTILISATEUR:
        setUtilisateur((Utilisateur)newValue);
        return;
      case DslLogsPackage.LOG__ACTION:
        setAction((Action)newValue);
        return;
      case DslLogsPackage.LOG__PARAMETRE:
        setParametre((Parametre)newValue);
        return;
      case DslLogsPackage.LOG__REPONSE:
        setReponse((Reponse)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslLogsPackage.LOG__DATE:
        setDate((Date)null);
        return;
      case DslLogsPackage.LOG__UTILISATEUR:
        setUtilisateur((Utilisateur)null);
        return;
      case DslLogsPackage.LOG__ACTION:
        setAction((Action)null);
        return;
      case DslLogsPackage.LOG__PARAMETRE:
        setParametre((Parametre)null);
        return;
      case DslLogsPackage.LOG__REPONSE:
        setReponse(REPONSE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslLogsPackage.LOG__DATE:
        return date != null;
      case DslLogsPackage.LOG__UTILISATEUR:
        return utilisateur != null;
      case DslLogsPackage.LOG__ACTION:
        return action != null;
      case DslLogsPackage.LOG__PARAMETRE:
        return parametre != null;
      case DslLogsPackage.LOG__REPONSE:
        return reponse != REPONSE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (reponse: ");
    result.append(reponse);
    result.append(')');
    return result.toString();
  }

} //LogImpl
